--- a/net/minecraft/world/item/crafting/RecipeMap.java
+++ b/net/minecraft/world/item/crafting/RecipeMap.java
@@ -13,7 +_,7 @@
 
 public class RecipeMap {
     public static final RecipeMap EMPTY = new RecipeMap(ImmutableMultimap.of(), Map.of());
-    private final Multimap<RecipeType<?>, RecipeHolder<?>> byType;
+    private Multimap<RecipeType<?>, RecipeHolder<?>> byType;
     private final Map<ResourceKey<Recipe<?>>, RecipeHolder<?>> byKey;
 
     private RecipeMap(Multimap<RecipeType<?>, RecipeHolder<?>> p_379497_, Map<ResourceKey<Recipe<?>>, RecipeHolder<?>> p_380280_) {
@@ -31,6 +_,19 @@
         }
 
         return new RecipeMap(builder.build(), builder1.build());
+    }
+
+    public void order() {
+        Map<ResourceKey<Recipe<?>>, Integer> recipePriorities = net.neoforged.neoforge.common.NeoForgeEventHandler.getRecipePriorityManager().getRecipePriorities(); // Neo: get overriding recipe priorities
+        com.google.common.collect.SetMultimap<Integer, com.mojang.datafixers.util.Pair<RecipeType<?>, RecipeHolder<?>>> priorityBuilder = com.google.common.collect.MultimapBuilder.treeKeys().hashSetValues().build();
+        com.google.common.collect.LinkedListMultimap<RecipeType<?>, RecipeHolder<?>> finalBuilder = com.google.common.collect.LinkedListMultimap.create();
+
+        for (RecipeHolder<?> recipeholder : this.byKey.values()) {
+            priorityBuilder.put(recipePriorities.getOrDefault(recipeholder.id(), 0), com.mojang.datafixers.util.Pair.of(recipeholder.value().getType(), recipeholder));
+        }
+
+        com.google.common.collect.Lists.reverse(new java.util.ArrayList<>(priorityBuilder.entries())).forEach((e) -> finalBuilder.put(e.getValue().getFirst(), e.getValue().getSecond()));
+        this.byType = ImmutableMultimap.copyOf(finalBuilder);
     }
 
     public <I extends RecipeInput, T extends Recipe<I>> Collection<RecipeHolder<T>> byType(RecipeType<T> p_379772_) {
